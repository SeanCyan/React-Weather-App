{"version":3,"sources":["panel.js","Search.js","Footer.js","App.js","serviceWorker.js","index.js"],"names":["Panel","react_default","a","createElement","className","concat","this","props","weatherDayOne","icon","src","alt","description","dateDayOne","tempDayOne","temp","humidity","city","name","country","weatherDayTwo","dateDayTwo","tempDayTwo","weatherDayThree","dateDayThree","tempDayThree","weatherDayFour","dateDayFour","tempDayFour","weatherDayFive","dateDayFive","tempDayFive","React","Component","Search","for","type","onChange","updateInputValue","placeholder","onClick","getForecast","Footer","style","backgroundColor","paddingTop","App","state","inputValue","e","_this","setState","target","value","url","fetch","then","response","json","Json","list","main","weather","dt_txt","substring","document","querySelectorAll","forEach","card","transform","querySelector","display","classList","contains","src_Search_0","panel","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.5b74b4c4.chunk.js","sourcesContent":["import React from 'react'\r\nimport './card.css'\r\n\r\nclass Panel extends React.Component {\r\n\r\n    render() {\r\n    return (\r\n            <div className=\"panel\">\r\n                <h2 className=\"caption\">HOWS THE WEATHER?</h2>\r\n                <div className={`card a${this.props.weatherDayOne.icon}`}>\r\n                    <img src={`icons/${this.props.weatherDayOne.icon}.png`} alt={`${this.props.weatherDayOne.description}`} className='card-icon'/>\r\n                    <h3>{`${this.props.weatherDayOne.description}`}</h3>\r\n                    <p>{`${this.props.dateDayOne}`}</p>\r\n                    <div className='card-row'>\r\n                        <div className='card-temperature'>\r\n                        {this.props.tempDayOne.temp}°C\r\n                        <span className='small'> / {this.props.tempDayOne.humidity} Humidity</span>\r\n                        </div>\r\n                    </div>\r\n                    <div className='card-line'></div>\r\n                    <div className='card-city'>{this.props.city.name}, {this.props.city.country}</div>\r\n                </div>\r\n                <div className={`card a${this.props.weatherDayTwo.icon}`}>\r\n                    <img src={`icons/${this.props.weatherDayTwo.icon}.png`} alt={`${this.props.weatherDayTwo.description}`} className='card-icon'/>\r\n                    <h3>{`${this.props.weatherDayTwo.description}`}</h3>\r\n                    <p>{`${this.props.dateDayTwo}`}</p>\r\n                    <div className='card-row'>\r\n                        <div className='card-temperature'>\r\n                        {this.props.tempDayTwo.temp}°C\r\n                        <span className='small'> / {this.props.tempDayTwo.humidity} Humidity</span>\r\n                        </div>\r\n                    </div>\r\n                    <div className='card-line'></div>\r\n                    <div className='card-city'>{this.props.city.name}, {this.props.city.country}</div>\r\n                </div>\r\n                <div className={`card a${this.props.weatherDayThree.icon}`}>\r\n                    <img src={`icons/${this.props.weatherDayThree.icon}.png`} alt={`${this.props.weatherDayThree.description}`} className='card-icon'/>\r\n                    <h3>{`${this.props.weatherDayThree.description}`}</h3>\r\n                    <p>{`${this.props.dateDayThree}`}</p>\r\n                    <div className='card-row'>\r\n                        <div className='card-temperature'>\r\n                        {this.props.tempDayThree.temp}°C\r\n                        <span className='small'> / {this.props.tempDayThree.humidity} Humidity</span>\r\n                        </div>\r\n                    </div>\r\n                    <div className='card-line'></div>\r\n                    <div className='card-city'>{this.props.city.name}, {this.props.city.country}</div>\r\n                </div>\r\n                <div className={`card a${this.props.weatherDayFour.icon}`}>\r\n                    <img src={`icons/${this.props.weatherDayFour.icon}.png`} alt={`${this.props.weatherDayFour.description}`} className='card-icon'/>\r\n                    <h3>{`${this.props.weatherDayFour.description}`}</h3>\r\n                    <p>{`${this.props.dateDayFour}`}</p>\r\n                    <div className='card-row'>\r\n                        <div className='card-temperature'>\r\n                        {this.props.tempDayFour.temp}°C\r\n                        <span className='small'> / {this.props.tempDayFour.humidity} Humidity</span>\r\n                        </div>\r\n                    </div>\r\n                    <div className='card-line'></div>\r\n                    <div className='card-city'>{this.props.city.name}, {this.props.city.country}</div>\r\n                </div>\r\n                <div className={`card a${this.props.weatherDayFive.icon}`}>\r\n                    <img src={`icons/${this.props.weatherDayFive.icon}.png`} alt={`${this.props.weatherDayFive.description}`} className='card-icon'/>\r\n                    <h3>{`${this.props.weatherDayFive.description}`}</h3>\r\n                    <p>{`${this.props.dateDayFive}`}</p>\r\n                    <div className='card-row'>\r\n                        <div className='card-temperature'>\r\n                        {this.props.tempDayFive.temp}°C\r\n                        <span className='small'> / {this.props.tempDayFive.humidity} Humidity</span>\r\n                        </div>\r\n                    </div>\r\n                    <div className='card-line'></div>\r\n                    <div className='card-city'>{this.props.city.name}, {this.props.city.country}</div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Panel;\r\n","import React from 'react';\r\nimport './Search.css'\r\n\r\nclass Search extends React.Component {\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"search\">\r\n                <label for=\"search-city\">Input a city name & country code to get a forecast!</label>\r\n                <input type=\"text\" className=\"search-city\" onChange={this.props.updateInputValue} placeholder=\"e.g. Newcastle,GB\" />\r\n                <button className=\"get-weather\" onClick={this.props.getForecast}>Get Weather!</button>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Search;","import React from 'react'\r\n\r\nexport default () => {\r\n    return (\r\n        <div className=\"footer\" style={{backgroundColor: '#201b2b', paddingTop: '40px'}}>\r\n            <h5>Powered by OpenWeatherMap</h5>\r\n        </div>\r\n    )\r\n}","import React, { Component } from 'react';\nimport Panel from './panel.js';\nimport Search from './Search.js';\nimport Footer from './Footer.js';\nimport './normalize.css';\nimport './App.css';\nimport './panel.css';\n\nclass App extends Component {\n\nstate = {\n    inputValue: '',\n    tempDayOne: '',\n    weatherDayOne: '',\n    dateDayOne: '',\n    tempDayTwo: '',\n    weatherDayTwo: '',\n    dateDayTwo: '',\n    tempDayThree: '',\n    weatherDayThree: '',\n    dateDayThree: '',\n    tempDayFour: '',\n    weatherDayFour: '',\n    dateDayFour: '',\n    tempDayFive: '',\n    weatherDayFive: '',\n    dateDayFive: '',\n    city: '',\n}\n\ncomponentDidMount(){\n  const cards = document.querySelectorAll('.card');\n    cards.forEach((card) => {\n      if (card.classList.contains('aundefined')) {\n        // card.style.display = 'none';\n        card.style.transform = \"translate(-600%, -50%)\";\n      }\n    });\n}\n\nupdateInputValue = (e) => {\n  this.setState({\n      inputValue: e.target.value,\n    });\n}\n\ngetForecast = () => {\n  const url = `https://api.openweathermap.org/data/2.5/forecast?q=${this.state.inputValue}&mode=json&appid=9a5de275905fd24f70dc28cdf4d9d0c6&units=metric`\n  fetch(url)\n  .then(response => response.json())\n  .then(Json => this.setState({\n         city: Json.city,\n         tempDayOne: Json.list[0].main,\n         weatherDayOne: Json.list[0].weather[0],\n         dateDayOne: Json.list[0].dt_txt.substring(0,10),\n         tempDayTwo: Json.list[8].main,\n         weatherDayTwo: Json.list[8].weather[0],\n         dateDayTwo: Json.list[8].dt_txt.substring(0,10),\n         tempDayThree: Json.list[16].main,\n         weatherDayThree: Json.list[16].weather[0],\n         dateDayThree: Json.list[16].dt_txt.substring(0,10),\n         tempDayFour: Json.list[24].main,\n         weatherDayFour: Json.list[24].weather[0],\n         dateDayFour: Json.list[24].dt_txt.substring(0,10),\n         tempDayFive: Json.list[32].main,\n         weatherDayFive: Json.list[32].weather[0],\n         dateDayFive: Json.list[32].dt_txt.substring(0,10),\n     }));\n     const cards = document.querySelectorAll('.card');\n      cards.forEach((card) => {\n        // card.style.display = 'block';\n        card.style.transform = \"translate(0%, -50%)\";\n     });\n     const caption = document.querySelector('.caption');\n     caption.style.display = 'none';\n}\n\n  render() {\n\n    return (\n      <div className=\"grid\">\n        <Search \n        inputValue={this.state.inputValue}\n        updateInputValue={this.updateInputValue}\n        getForecast={this.getForecast}\n        />\n        <Panel \n          city={this.state.city}\n          tempDayOne={this.state.tempDayOne}\n          weatherDayOne={this.state.weatherDayOne}\n          dateDayOne={this.state.dateDayOne}\n          tempDayTwo={this.state.tempDayTwo}\n          weatherDayTwo={this.state.weatherDayTwo}\n          dateDayTwo={this.state.dateDayTwo}\n          tempDayThree={this.state.tempDayThree}\n          weatherDayThree={this.state.weatherDayThree}\n          dateDayThree={this.state.dateDayThree}\n          tempDayFour={this.state.tempDayFour}\n          weatherDayFour={this.state.weatherDayFour}\n          dateDayFour={this.state.dateDayFour}\n          tempDayFive={this.state.tempDayFive}\n          weatherDayFive={this.state.weatherDayFive}\n          dateDayFive={this.state.dateDayFive}\n          />       \n        <Footer />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}